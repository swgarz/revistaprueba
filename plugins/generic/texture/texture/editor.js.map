{"version":3,"file":"editor.js","sources":["../web/editor.js"],"sourcesContent":["import {\n  getQueryStringParam, substanceGlobals, platform\n} from 'substance'\nimport { TextureWebApp, TextureArchive, vfsSaveHook } from 'substance-texture'\n\nwindow.addEventListener('load', () => {\n  substanceGlobals.DEBUG_RENDERING = platform.devtools\n  let app = DevWebApp.mount({\n    archiveId: getQueryStringParam('archive') || 'kitchen-sink',\n    storageType: getQueryStringParam('storage') || 'vfs',\n    storageUrl: getQueryStringParam('storageUrl') || '/archives'\n  }, window.document.body)\n\n  // put the archive and some more things into global scope, for debugging\n  setTimeout(() => {\n    window.app = app\n  }, 500)\n})\n\n// This uses a monkey-patched VfsStorageClient that checks immediately\n// if the stored data could be loaded again, or if there is a bug in\n// Textures exporter\nclass DevWebApp extends TextureWebApp {\n\n  _getStorage(storageType) {\n    let storage = super._getStorage(storageType)\n    if (storageType === 'vfs') {\n      vfsSaveHook(storage, TextureArchive)\n    }\n    return storage\n  }\n}"],"names":["substanceGlobals","platform","getQueryStringParam","TextureWebApp","vfsSaveHook","TextureArchive"],"mappings":";;;;;;EAKA,MAAM,CAAC,gBAAgB,CAAC,MAAM,EAAE,MAAM;EACtC,EAAEA,0BAAgB,CAAC,eAAe,GAAGC,kBAAQ,CAAC,SAAQ;EACtD,EAAE,IAAI,GAAG,GAAG,SAAS,CAAC,KAAK,CAAC;EAC5B,IAAI,SAAS,EAAEC,6BAAmB,CAAC,SAAS,CAAC,IAAI,cAAc;EAC/D,IAAI,WAAW,EAAEA,6BAAmB,CAAC,SAAS,CAAC,IAAI,KAAK;EACxD,IAAI,UAAU,EAAEA,6BAAmB,CAAC,YAAY,CAAC,IAAI,WAAW;EAChE,GAAG,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAC;;EAE1B;EACA,EAAE,UAAU,CAAC,MAAM;EACnB,IAAI,MAAM,CAAC,GAAG,GAAG,IAAG;EACpB,GAAG,EAAE,GAAG,EAAC;EACT,CAAC,EAAC;;EAEF;EACA;EACA;EACA,MAAM,SAAS,SAASC,8BAAa,CAAC;;EAEtC,EAAE,WAAW,CAAC,WAAW,EAAE;EAC3B,IAAI,IAAI,OAAO,GAAG,KAAK,CAAC,WAAW,CAAC,WAAW,EAAC;EAChD,IAAI,IAAI,WAAW,KAAK,KAAK,EAAE;EAC/B,MAAMC,4BAAW,CAAC,OAAO,EAAEC,+BAAc,EAAC;EAC1C,KAAK;EACL,IAAI,OAAO,OAAO;EAClB,GAAG;EACH;;;;"}